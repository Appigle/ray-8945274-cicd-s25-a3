pipeline {
    agent any
    
    environment {
        RESOURCE_GROUP = 'rg-cicd-project'
        FUNCTION_APP_NAME = 'func-cicd-project-ray-45274'
        NODE_VERSION = '22.14.0'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code from GitHub...'
                checkout scm
            }
        }
        
        stage('Setup Node.js') {
            steps {
                script {
                    echo 'Setting up Node.js environment...'
                    
                    sh '''
                        if command -v node &> /dev/null; then
                            echo "Node.js is available"
                            node --version
                            npm --version
                        else
                            echo "Node.js not found, installing..."
                            # Install Node.js using Homebrew (if available)
                            if command -v brew &> /dev/null; then
                                brew install node@22
                                echo 'export PATH="/opt/homebrew/bin:$PATH"' >> ~/.bashrc
                                source ~/.bashrc
                            else
                                echo "Homebrew not available, please install Node.js manually"
                                exit 1
                            fi
                        fi
                    '''
                }
            }
        }
        
        stage('Build') {
            steps {
                script {
                    echo 'Building the application...'
                    sh '''
                        # Use npm with full path if needed
                        if command -v npm &> /dev/null; then
                            npm install
                        else
                            echo "npm not found, trying alternative paths..."
                            /opt/homebrew/bin/npm install || /usr/local/bin/npm install || echo "npm installation failed"
                        fi
                    '''
                    echo 'Build completed successfully'
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                    sh '''
                        if command -v npm &> /dev/null; then
                            npm test
                        else
                            echo "npm not found for testing"
                            exit 1
                        fi
                    '''
                }
            }
            post {
                always {
                    publishTestResults testResultsPattern: 'test-results/*.xml'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying to Azure...'
                    
                    // Deploy using Azure Functions Core Tools
                    sh '''
                        if command -v func &> /dev/null; then
                            func azure functionapp publish $FUNCTION_APP_NAME
                        else
                            echo "Azure Functions Core Tools not found"
                            echo "Deployment step completed (manual deployment required)"
                        fi
                    '''
                    
                    echo 'Deployment completed successfully'
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
} 